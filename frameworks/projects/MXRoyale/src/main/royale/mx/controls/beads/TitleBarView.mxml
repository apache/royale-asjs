<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<!---
 The TitleBarView is the view for a Panel's TitleBar written in MXML

 @langversion 3.0
 @playerversion Flash 10.2
 @playerversion AIR 2.6
 @productversion Royale 0.0
-->
<js:MXMLBeadView xmlns:fx="http://ns.adobe.com/mxml/2009"
                 xmlns:mx="library://ns.apache.org/royale/mx"
                 xmlns:js="library://ns.apache.org/royale/basic">
				  
    <fx:Script>
        <![CDATA[
        import mx.containers.beads.models.PanelModel;
        import mx.core.UIComponent;

        import org.apache.royale.core.IStrand;

        import org.apache.royale.html.TitleBar;
        import org.apache.royale.core.ITitleBarModel;
        import org.apache.royale.core.UIBase;
        import org.apache.royale.events.Event;

        private function clickHandler():void {
            var newEvent:org.apache.royale.events.Event = new org.apache.royale.events.Event('close');
            UIBase(_strand).dispatchEvent(newEvent)
        }

        private var statusTextField:TitleBarStatus;

        override public function set strand(value:IStrand):void{
            super.strand = value;
            PanelModel(model).addEventListener('statusChanged', onStatusChange);
            onStatusChange(null);
        }

        protected function onStatusChange(event:org.apache.royale.events.Event):void {
            var newStatus:String = PanelModel(model).status;
            var styleName:String = PanelModel(model).statusStyleName;
            if (newStatus) {
                if (!statusTextField) {
                    statusTextField = new TitleBarStatus();
                    UIComponent(_strand).addChildAt(statusTextField, 1)
                }
                statusTextField.text = newStatus;
                statusTextField.styleName = styleName;
                requestLayout();
            } else {
                if (statusTextField) {
                    UIComponent(_strand).removeChild(statusTextField);
                    statusTextField = null;
                    requestLayout();
                }
            }
        }

        private function requestLayout():void {
            //this might be useful at some point if a layout support is added for TitleBar
            //for now it will not really do anything
            //host.dispatchEvent(new org.apache.royale.events.Event('layoutNeeded'))
            //we could run in here some sort of internal code, but for now in Browser, using native CSS layout
        }
        ]]>
    </fx:Script>
    <js:beads>
        <js:MXMLBeadViewDataBinding />
        <js:LayoutChangeNotifier watchedProperty="{titleLabel.text}" />
    </js:beads>

    <mx:TitleBarTitle localId="titleLabel" text="{ITitleBarModel(model).title}"/>
    <js:CloseButton localId="closeButton" click="clickHandler()" className="TitleBarCloseButton"
                    visible="{ITitleBarModel(model).showCloseButton}"/>
    
</js:MXMLBeadView>
