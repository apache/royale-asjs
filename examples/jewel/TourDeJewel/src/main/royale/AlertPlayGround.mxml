<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<c:ExampleAndSourceCodeTabbedSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
    xmlns:j="library://ns.apache.org/royale/jewel" 
    xmlns:html="library://ns.apache.org/royale/html" 
    xmlns:js="library://ns.apache.org/royale/basic" 
    xmlns:c="components.*" sourceCodeUrl="AlertPlayGround.mxml">
    
    <fx:Script>
        <![CDATA[
			import org.apache.royale.core.IBeadLayout;
			import org.apache.royale.core.IBeadView;
			import org.apache.royale.events.CloseEvent;
			import org.apache.royale.events.Event;
			import org.apache.royale.events.MouseEvent;
			import org.apache.royale.jewel.Alert;
			import org.apache.royale.jewel.CheckBox;
			import org.apache.royale.jewel.beads.layouts.HorizontalLayout;
			import org.apache.royale.jewel.beads.layouts.VerticalLayout;
			import org.apache.royale.jewel.beads.views.AlertView;

            // Event handler function uses a static method to show
            // a pop-up window with the title, message, and requested buttons.        
            private function clickHandler(event:MouseEvent):void {
                var alert:Alert = Alert.show("Do you want to <b>save</b> your changes?", "Save Changes", 3);
				alert.addEventListener(CloseEvent.CLOSE, alertClickHandler);
            }
            
            private var alert:Alert;
            private var check:CheckBox;
            // changing controlBar's Buttons Layout
            private function clickHandler2(event:MouseEvent):void {
                alert = Alert.show("This example shows access to AlertView and controlBar to expand Buttons layout and change defaults. The height of the alert is set up to 300px too.", "Save Changes", 3);
				alert.height = 300;

                check = new CheckBox();
                check.selected = true;
                check.text = "Buttons must fill control bar space";
                check.addEventListener(Event.CHANGE, expandButtons);

                expandButtons();
            }
            
            private function expandButtons(event:Event = null):void {
                var alertView:AlertView = alert.getBeadByType(IBeadView) as AlertView;

                if(event == null)
                {
                    var verticalLayout:VerticalLayout = new VerticalLayout();
                    verticalLayout.gap = 9;
                    alertView.content.addBead(verticalLayout);

                    alertView.content.addElement(check);
                }

                var layout:HorizontalLayout = alertView.controlBar.getBeadByType(IBeadLayout) as HorizontalLayout;
			    layout.itemsExpand = check.selected;
            }
        
            // Event handler function for displaying the selected Alert button.
            private function alertClickHandler(event:CloseEvent):void {
                if (event.detail == Alert.YES)
                    status.text="You answered Yes";
                else
                    status.text="You answered No";
            }
		]]>
    </fx:Script>

    <j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
        <j:beads>
			<js:Paddings paddingTop="0" paddingLeft="50" paddingRight="50" paddingBottom="50"/>
		</j:beads>

		<c:ExampleHeader title="Jewel Alert">
			<c:description>
				<![CDATA[<strong>Jewel Alert</strong> examples.]]>
			</c:description>
		</c:ExampleHeader>

		<j:GridCell desktopNumerator="1" desktopDenominator="3" tabletNumerator="1" tabletDenominator="3" phoneNumerator="1" phoneDenominator="1">
            <!-- Alert 1-->
            <j:Card>
                <j:CardPrimaryContent>
                    <j:Label text="Click the button below to display a simple Alert window" multiline="true"/>
                </j:CardPrimaryContent>
                <j:CardActions>
                    <j:Button text="Click Me" click="Alert.show('This is an Alert component example that shows a label text and the default OK button.', 'Alert Example')"/>
				</j:CardActions>
            </j:Card>
        </j:GridCell>

        <j:GridCell desktopNumerator="1" desktopDenominator="3" tabletNumerator="1" tabletDenominator="3" phoneNumerator="1" phoneDenominator="1">
            <!-- Alert 2-->
            <j:Card>
                <j:CardPrimaryContent>
                    <j:Label text="Click the button below to display an Alert window and capture the button pressed by the user." multiline="true"/>
                <j:Label localId="status"/>
                </j:CardPrimaryContent>
                <j:CardActions>
                    <j:Button text="Click Me" click="clickHandler(event)"/>
				</j:CardActions>
            </j:Card>
        </j:GridCell>
        
        <j:GridCell desktopNumerator="1" desktopDenominator="3" tabletNumerator="1" tabletDenominator="3" phoneNumerator="1" phoneDenominator="1">
            <!-- Alert 3 (Complex Example)-->
            <j:Card>
                <j:CardPrimaryContent>
                    <j:Label text="This is a complex example that add and retrieve beads at runtime. Click the button below to display an Alert window that add content and make changes in some layout parts." multiline="true"/>
                </j:CardPrimaryContent>
                <j:CardActions>
                    <j:Button text="Click Me" click="clickHandler2(event)"/>
				</j:CardActions>
            </j:Card>
        </j:GridCell>
	</j:Grid>
    
</c:ExampleAndSourceCodeTabbedSectionContent>
