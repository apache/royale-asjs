<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<c:ExampleAndSourceCodeTabbedSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:j="library://ns.apache.org/royale/jewel" 
	xmlns:html="library://ns.apache.org/royale/html" 
	xmlns:js="library://ns.apache.org/royale/basic" 
	xmlns:c="components.*" sourceCodeUrl="SnackbarPlayGround.mxml">
	
	<fx:Script>
		<![CDATA[
			import org.apache.royale.core.StyledUIBase;
			import org.apache.royale.jewel.Snackbar;

			// Event handler function uses a static method to show
            // a snackbar with the message, and requested action.        
            private function clickHandler(event:MouseEvent):void {
                var snackbar:Snackbar = Snackbar.show("Do you want to save your changes?", 0, "Save Changes");
				snackbar.addEventListener(Snackbar.ACTION, actionClickHandler);
            }

            private function clickHandler2(event:MouseEvent):void {
                Snackbar.show("This example shows long message in Snackbar that will disappear after 10 seconds, or you can click other button to show another Snackbar immediately. <i>There is only one Snackbar can be displayed</i> in the application.", 10000, "DISMISS");
            }

			// Event handler function for displaying the action button.
            private function actionClickHandler(event:Event):void {
                status.text="You clicked Save Changes";
            }
		]]>
	</fx:Script>

	<c:beads>
		<js:ContainerDataBinding/>
	</c:beads>
	
	<j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
		<j:beads>
			<js:Paddings paddingTop="0" paddingLeft="50" paddingRight="50" paddingBottom="50"/>
		</j:beads>

		<c:ExampleHeader title="Jewel SnackBar">
			<c:description>
				<![CDATA[<strong>Jewel SnackBar</strong> examples.]]>
			</c:description>
		</c:ExampleHeader>

		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel Snackbar"/>

				<!-- Alert 1-->
				<j:Label text="Click the button below to display a simple Snackbar" multiline="true"/>
				<j:Button text="Click Me" click="Snackbar.show('This is an Snackbar component example that shows a message')"/>

				<!-- Alert 2-->
				<j:Label text="Click the button below to display an Snackbar and capture the action pressed by the user." multiline="true"/>
				<j:Button text="Click Me" click="clickHandler(event)"/>

				<j:Label localId="status"/>

				<!-- Alert 3 (Long Message)-->
				<j:Label text="This is long message example just for demonstration. Do not use long message and 'DISMISS' action in Snackbar, because it automatically disappear after a timeout." multiline="true"/>
				<j:Button text="Click Me" click="clickHandler2(event)"/>
			</j:Card>
		</j:GridCell>
		<j:GridCell desktopNumerator="1" desktopDenominator="2" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Snackbar with emphasis"/>
				<j:Label text="Click the button below to display Snackbar with different emphasis" multiline="true"/>
				<j:VGroup gap="8">
					<j:Button text="Default" localId="button" click="Snackbar.show('This is Default')"/>
					<j:Button text="Primary" emphasis="{StyledUIBase.PRIMARY}" click="{Snackbar.show('This is Primary').emphasis = StyledUIBase.PRIMARY}"/>
					<j:Button text="Secondary" emphasis="{StyledUIBase.SECONDARY}" click="{Snackbar.show('Secondary with ACTION',4000,'ACTION').emphasis = StyledUIBase.SECONDARY}"/>
					<j:Button text="Emphasized" emphasis="{StyledUIBase.EMPHASIZED}" click="{Snackbar.show('This is Emphasized with some message').emphasis = StyledUIBase.EMPHASIZED}"/>
				</j:VGroup>
			</j:Card>
		</j:GridCell>
	</j:Grid>
</c:ExampleAndSourceCodeTabbedSectionContent>
