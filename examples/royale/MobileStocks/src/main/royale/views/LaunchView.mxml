<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:TitleView xmlns:fx="http://ns.adobe.com/mxml/2009"
			title="Assets"
			xmlns:js="library://ns.apache.org/royale/basic"
			xmlns:models="models.*"
			xmlns:local="*"
		    xmlns:views="views.*"
			className="LaunchView">
			
	<fx:Script>
		<![CDATA[
			import controller.LaunchViewController;
			import models.ProductsModel;
			import models.Stock;
			
			import org.apache.royale.binding.SimpleBinding;
			import org.apache.royale.core.IBeadController;
			import org.apache.royale.core.IBeadModel;
			import org.apache.royale.events.Event;
			import org.apache.royale.events.ValueChangeEvent;
			import org.apache.royale.mobile.IViewManager;
			import org.apache.royale.mobile.StackedViewManager;
			import org.apache.royale.html.beads.DataProviderChangeNotifier;
						
			public function set dataModel(value:IBeadModel):void
			{
				var cm:IBeadController = controller;
				(cm as LaunchViewController).model = value;
				
				var newEvent:ValueChangeEvent = new ValueChangeEvent("valueChange", false, false, null, value);
				newEvent.propertyName = "dataModel";
				dispatchEvent(newEvent);
			}
			
			public function get dataModel():IBeadModel
			{
				var cm:IBeadController = controller;
				return (cm as LaunchViewController).model;
			}
			
			public function addSymbol():void
			{
				dispatchEvent(new org.apache.royale.events.Event("addSymbol"));
			}
			
			public function removeSymbol():void
			{
				dispatchEvent(new org.apache.royale.events.Event("removeSymbol"));
			}
			
			public function gridSelected():void
			{
				dispatchEvent(new org.apache.royale.events.Event("symbolSelected"));
			}
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace js "library://ns.apache.org/royale/basic";
		.AllCharts {
			border-width: 0px;
			padding-left: 2px;
			padding-top: 10px;
			padding-bottom: 2px;
			padding-right: 10px;
		}
		
		.DataGridListArea .StringItemRenderer {
			font-size: 10px;
		}

		.HorizontalAxis .TickLabel {
			color: #333333;
		}

		.VerticalAxis .TickLabel {
			color: #333333;
		}
		
		/*.Outer1 {
			background-color: #FFFFFF;
			vertical-align: middle;
		}*/
		
		.InputChild {
			vertical-align: middle;
		}
		
		/*.Outer2 {
			background-color: #FFFFFF;
		}*/
		
		.LaunchGrid {
			background-color: #FFFFFF;
		}
		
		.DataGridListArea {
			background-color: #FFFFFF;
		}
	</fx:Style>
	
	<fx:Metadata>
		[Event("next")]
	</fx:Metadata>
	
	<js:beads>
		<js:VerticalFlexLayout />
	</js:beads>
	
	<!-- 
<js:model>
		<models:AssetsModel />
	</js:model>
 -->

	<js:Container height="40" width="100%">
	  <js:beads>
	  	<js:OneFlexibleChildHorizontalLayout flexibleChild="spacer1" maxWidth="400" maxHeight="20" />
	  </js:beads>
		<js:Label text="Symbol:" className="InputChild" />
		<js:TextInput id="symbolInput" width="50" className="InputChild" />
		<js:Spacer width="10" />
		<js:Label text="Shares:" className="InputChild" />
		<js:TextInput id="sharesInput" width="50" className="InputChild" />
		<js:Spacer width="10" />
		<js:TextButton id="addButton" text="Add" width="80" click="addSymbol()" className="InputChild" />
		<js:Spacer id="spacer1" width="1" />
		<js:TextButton id="removeButton" text="Remove" width="80" click="removeSymbol()" className="InputChild" />
	</js:Container>
	
		<js:DataGrid id="assetGrid" style="flex-grow:'45'" width="100%" rowHeight="25" change="gridSelected()" className="LaunchGrid">
			<js:beads>
				<js:DataGridPercentageView />
				<js:SimpleBinding
					eventName="update"
					sourceID="dataModel"
					sourcePropertyName="assetList"
					destinationPropertyName="dataProvider" />
				<js:DataProviderChangeNotifier sourceID="dataModel" propertyName="assetList" 
											   destinationPropertyName="dataProvider" changeEventName="dataProviderChanged" />
			</js:beads>
			<js:columns>
				<js:DataGridColumn columnWidth="36" label="Company (SYMB)" dataField="name" itemRenderer="renderers.CompanyNameRenderer" />
				<js:DataGridColumn columnWidth="20" label="Shares" dataField="shares" />
				<js:DataGridColumn columnWidth="20" label="Last" dataField="last" />
				<js:DataGridColumn columnWidth="24" label="Total $" dataField="shares" itemRenderer="renderers.SharesTotalRenderer" />
			</js:columns>
		</js:DataGrid>
	
	<js:Spacer style="flex-grow:'3'" />
		
	<js:BarChart id="barChart" width="100%" style="flex-grow:'45'" className="AllCharts">
		<js:model>
			<js:ChartArrayListSelectionModel />
		</js:model>
		<js:beads>
			<js:DataItemRendererFactoryForSeriesArrayListData />
			<js:BarChartLayoutForArrayList gap="2" />
			<js:SimpleBinding
				eventName="update"
				sourceID="dataModel"
				sourcePropertyName="assetList"
				destinationPropertyName="dataProvider" />
			<js:DataProviderChangeNotifier sourceID="dataModel" propertyName="assetList" 
										   destinationPropertyName="dataProvider" changeEventName="dataProviderChanged" />
			<js:HorizontalLinearAxisForArrayListBead valueField="total" />
			<js:VerticalCategoryAxisForArrayListBead categoryField="symbol" />
		</js:beads>
		<js:series>
			<js:BarSeries xField="total"> 
				<js:itemRenderer>
					<fx:Component>
						<js:BoxItemRenderer>
							<js:fill>
								<js:SolidColor color="#FF964D" alpha="1.0" />
							</js:fill>
						</js:BoxItemRenderer>                      
					</fx:Component>
				</js:itemRenderer>
			</js:BarSeries>
		</js:series>
	</js:BarChart>

</js:TitleView>
