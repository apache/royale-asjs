<?xml version="1.0" encoding="utf-8"?>

<js:View xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:js="library://ns.apache.org/royale/basic">
	
	<fx:Style>
		@namespace js "library://ns.apache.org/royale/basic";
		
		/* Vertically center the cells of the Tree and TreeGrid and give
		 * them a thin border.
		 */
		.Tree .StringItemRenderer {
			border: solid 0.5px #ACACAC;
			line-height: 40px;
		}

		.TreeGrid .StringItemRenderer {
			border: solid 0.5px #ACACAC;
			line-height: 40px;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
		]]>
	</fx:Script>
    
    <js:beads>
        <js:ViewDataBinding />
    </js:beads>
	
	<js:Tree id="tree" x="30" y="30" width="400" height="500" 
			 labelField="title" rowHeight="40">
		<js:beads>
			<js:ConstantBinding
				sourceID="applicationModel"
				sourcePropertyName="treeData"
				destinationPropertyName="dataProvider" />
		</js:beads>
	</js:Tree>
	
	<js:TreeGrid id="treeGrid" x="450" y="30" width="500" height="500" rowHeight="40">
		<js:beads>
			<js:ConstantBinding
				sourceID="applicationModel"
				sourcePropertyName="treeData"
				destinationPropertyName="dataProvider" />
		</js:beads>
		<js:columns>
			<js:TreeGridColumn label="Title" dataField="title" columnWidth="250" />
			<js:DataGridColumn label="Artist" dataField="artist" columnWidth="150" />
			<js:DataGridColumn label="Length" dataField="length" columnWidth="100" />
		</js:columns>
	</js:TreeGrid>

</js:View>
