<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<js:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
                 xmlns:js="library://ns.apache.org/royale/basic"
                 xmlns:local="*">

    <fx:Script>
		<![CDATA[
			import org.apache.royale.net.events.FaultEvent;
			import org.apache.royale.net.events.ResultEvent;
            import valueObjects.ClientValueObject;
            import valueObjects.Product;
			
			protected function sendName():void
			{
                service.send("echo", [name_txt.text]);
			}
			
			private function onResult(evt:ResultEvent):void
			{
				trace("Result=" + evt.data);
				if (evt.data is String)
					received.text = "Received: " + evt.data;
				else if (evt.data is Product)
                {
                    var product:Product = evt.data as Product;
                    received.text = "Received: product name is '" + product.name + "' and product description is '" + product.description + "'" ;
                } else
              	{
                    var arr:Array = evt.data as Array;
                    list.dataProvider = arr;
				}
			}
			
			private function onFault(evt:FaultEvent):void
			{
				trace("Fault=" + evt.message);
			}

			protected function getVOs():void
			{
                service.send("getObjectArray1", []);
			}

            protected function getSomeProduct():void
			{
                service.send("getSomeProduct", []);
			}

            protected function reportChange():void
            {
                var vo:ClientValueObject = list.selectedItem as ClientValueObject;
                received.text = "selected " + vo.id;
            }
			
		]]>
	</fx:Script>

    <js:beads>
        <js:ClassAliasBead />
        <js:RemoteObject id="service" result="onResult(event)" fault="onFault(event)"
                         endPoint = "http://localhost:8080/messagebroker/websocket-amf"
                         destination = "exampleService"
                         source = "exampleService"/>
    </js:beads>

    <js:initialView>
        <js:View>
            <js:beads>
                <js:VerticalLayout />
            </js:beads>
            <js:Label text="Text to be sent via AMF RemoteObject..." />
            <js:TextInput id="name_txt" />
            <js:TextButton text="Send Name to AMF" click="sendName()"/>
			<js:Label id="received" width="300"/>
            <js:TextButton text="Get Array of ValueObjects" click="getVOs()"/>
            <js:List id="list" labelField="id" width="100" height="100" change="reportChange()"/>
            <js:TextButton text="Get Some Product" click="getSomeProduct()"/>
        </js:View>
    </js:initialView>

    <js:valuesImpl>
        <js:SimpleCSSValuesImpl />
    </js:valuesImpl>
</js:Application>
