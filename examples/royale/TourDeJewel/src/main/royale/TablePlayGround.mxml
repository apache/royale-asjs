<?xml version="1.0" encoding="utf-8"?>
<!--

Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

-->
<c:ExampleAndSourceCodeTabbedSectionContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:j="library://ns.apache.org/royale/jewel" 
	xmlns:html="library://ns.apache.org/royale/html" 
	xmlns:js="library://ns.apache.org/royale/basic" 
	xmlns:c="components.*" 
	xmlns:models="models.*" sourceCodeUrl="TablePlayGround.mxml">
	
	<j:model>
		<models:TablesModel id="tablesModel"/>
	</j:model>

	<j:beads>
		<js:ContainerDataBinding/>
	</j:beads>

	<j:Grid gap="true" itemsVerticalAlign="itemsSameHeight">
		<j:GridCell desktopNumerator="1" desktopDenominator="1" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">
			<j:Card>
				<html:H3 text="Jewel SimpleTable"/>

				<j:SimpleTable>
					<j:THead>
						<j:TableRow>
							<j:TableHeaderCell width="48">
								<j:Label text="Icons" />
							</j:TableHeaderCell>
							<j:TableHeaderCell width="140">
								<j:Label text="Text Column" />
							</j:TableHeaderCell>
							<j:TableHeaderCell width="140">
								<j:Label text="Centered Text Column" />
							</j:TableHeaderCell>
							<j:TableHeaderCell>
								<j:Label text="Number Column">
									<j:beads>
										<j:TextAlign align="right"/>
									</j:beads>
								</j:Label>
							</j:TableHeaderCell>
						</j:TableRow>
					</j:THead>
					<j:TBody>
						<j:TableRow>
							<j:TableCell>
								<js:FontIcon text="{MaterialIconType.INSERT_DRIVE_FILE}" material="true"/>
							</j:TableCell>
							<j:TableCell expandRows="2">
								<j:Label text="Some text in two rows" multiline="true"/>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="Some centered text">
									<j:beads>
										<j:TextAlign align="center"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="71">
									<j:beads>
										<j:TextAlign align="right"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
						</j:TableRow>
						<j:TableRow>
							<j:TableCell>
								<js:FontIcon text="{MaterialIconType.INSERT_DRIVE_FILE}" material="true"/>
							</j:TableCell>

							<j:TableCell>
								<j:Label text="More centered text">
									<j:beads>
										<j:TextAlign align="center"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="56">
									<j:beads>
										<j:TextAlign align="right"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
						</j:TableRow>
						<j:TableRow>
							<j:TableCell>
								<js:FontIcon text="{MaterialIconType.INSERT_DRIVE_FILE}" material="true"/>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="More text 2" />
							</j:TableCell>
							<j:TableCell>
								<j:Label text="More centered text 2">
									<j:beads>
										<j:TextAlign align="center"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="346">
									<j:beads>
										<j:TextAlign align="right"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
						</j:TableRow>
						<j:TableRow>
							<j:TableCell>
								<js:FontIcon text="{MaterialIconType.INSERT_DRIVE_FILE}" material="true"/>
							</j:TableCell>
							<j:TableCell>
								<!-- By using a Group within a cell you have better control of the
									layout.
								-->
								<j:VGroup>
									<j:Label text="Labels" />
									<j:Label text="with" />
									<j:Label text="Vertical" />
									<j:Label text="Layout" />
								</j:VGroup>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="More centered text 3">
									<j:beads>
										<j:TextAlign align="center"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
							<j:TableCell>
								<j:Label text="240">
									<j:beads>
										<j:TextAlign align="right"/>
									</j:beads>
								</j:Label>
							</j:TableCell>
						</j:TableRow>
					</j:TBody>
					<j:TFoot>
						<j:TableRow>
							<j:TableCell expandColumns="4">
								<j:HGroup gap="3" itemsHorizontalAlign="itemsRight">
									<j:IconTextInput rightPosition="true">
										<j:beads>
											<j:TextPrompt prompt="Search..."/>
										</j:beads>
										<j:icon>
											<js:FontIcon text="{MaterialIconType.SEARCH}" material="true"/>
										</j:icon>
									</j:IconTextInput>
									<j:Button text="SEARCH" emphasis="{Button.PRIMARY}"/>
								</j:HGroup>
							</j:TableCell>
						</j:TableRow>
					</j:TFoot>
				</j:SimpleTable>
			</j:Card>

		</j:GridCell>

		<j:GridCell desktopNumerator="1" desktopDenominator="1" tabletNumerator="1" tabletDenominator="1" phoneNumerator="1" phoneDenominator="1">

			<j:Card>
				<html:H3 text="Jewel Table (This component is still in development)"/>
				<j:HGroup gap="3">
					<j:VGroup gap="3">
						<j:Table id="table" change="onChange(event)" dataProvider="{tablesModel.guitarrists}">
							<j:TableColumn dataField="icon" label="" align="center" itemRenderer="itemRenderers.TableCellCloseIconItemRenderer"/>
							<j:TableColumn dataField="guitarrist" label="Guitarrist"/>
							<j:TableColumn dataField="album" label="Album" align="center" columnLabelAlign="center"/>
							<j:TableColumn dataField="year" label="Release Year" align="right" columnLabelAlign="right"/>
							<j:beads>
								<j:AddTableRowForArrayListData/>
								<j:RemoveTableRowForArrayListData/>
								<j:UpdateTableRowForArrayListData/>
								<j:RemoveAllItemRendererForArrayListData/>
							</j:beads>
						</j:Table>
						<j:Label id="selected"/>
					</j:VGroup>
					<j:VGroup gap="3">
						<j:Button click="changeTableData()" text="Change Data" emphasis="primary"/>
						<j:Button text="Add item" click="addItem()"/>
						<j:Button text="Remove first item" click="removeItemAt()"/>
						<j:Button text="Update first item" click="updateFirstItem()"/>
						<j:Button text="Remove all data" click="removeAllData()"/>
						<j:HGroup gap="3" itemsVerticalAlign="itemsCentered">
							<j:Label text="Select table by index: "/>
							<j:NumericStepper valueChange="table.selectedIndex = event.target.value" minimum="0"/>
						</j:HGroup>
						<!-- <j:HGroup gap="3" itemsVerticalAlign="itemsCentered">
							<j:Label text="Select table by item: "/>
							<j:NumericStepper valueChange="table.selectedItemProperty = table.dataProvider.getItemAt(event.target.value)" minimum="0"/>
						</j:HGroup> -->
					</j:VGroup>
				</j:HGroup>
			</j:Card>

		</j:GridCell>
	</j:Grid>

	<fx:Script>
		<![CDATA[
			import org.apache.royale.collections.ArrayList;
			import vos.GuitarristVO;

			private function onChange(event:Event):void {
                selected.text = "Selected: " + table.selectedItemProperty;
            }

			private function changeTableData():void
			{
				table.dataProvider = new ArrayList([
					new GuitarristVO("David Gilmour", "On an Island", 2006),
					new GuitarristVO("Eric Clapton", "Journeyman", 1989),
					new GuitarristVO("Frank Zappa", "Hot Rats", 1969),
					new GuitarristVO("Jimi Hendrix", "Electric Ladyland", 1968)
				]);
			}

			private function addItem():void
			{
				(table.dataProvider as ArrayList).addItem(new GuitarristVO("Eric Johnson", "Venus Isle", 1996));
				// tablesModel.guitarrists.addItem(new GuitarristVO("Eric Johnson", "Venus Isle", 1996)); // to test things are adding to right place
			}

			public function removeItemAt():void
			{
				(table.dataProvider as ArrayList).removeItemAt(0);
				// tablesModel.guitarrists.removeItemAt(0);
			}

			public function updateFirstItem():void
			{
				var item:GuitarristVO = (table.dataProvider as ArrayList).getItemAt(0) as GuitarristVO;
				item.guitarrist = "Robert Frip";
				item.year = 1980;
				(table.dataProvider as ArrayList).itemUpdated(item);
				// tablesModel.guitarrists.itemUpdated(item);
			}

			public function removeAllData():void
			{
				(table.dataProvider as ArrayList).removeAll();
				// tablesModel.guitarrists.removeAll();
			}
		]]>
	</fx:Script>

</c:ExampleAndSourceCodeTabbedSectionContent>
