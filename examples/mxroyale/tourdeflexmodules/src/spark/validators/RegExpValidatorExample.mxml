<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"  
			   xmlns:s="library://ns.apache.org/royale/spark" 
			   xmlns:mx="library://ns.apache.org/royale/mx"
               width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import mx.validators.*;
			
			// Write the results to the 
			private function handleResult(eventObj:ValidationResultEvent):void {
				if (eventObj.type == ValidationResultEvent.VALID)
				{
					// For valid events, the results Array contains
					// RegExpValidationResult objects.
					var xResult:RegExpValidationResult;
					reResults.text="x";
					for (var i:uint = 0; i < eventObj.results.length; i++)
					{
						xResult = eventObj.results[i];
						reResults.text=reResults.text + xResult.matchedIndex + " " + xResult.matchedString;
					}
				}
				else
				{
					reResults.text="";			
				}		
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:RegExpValidator id="regExpV" 
							source="{regex_text}" property="text" 
							flags="g" expression="{regex.text}" 
							valid="handleResult(event)" invalid="handleResult(event)"
							trigger="{myButton}" triggerEvent="click"/>
	</fx:Declarations>
	
	<s:Panel title="RegExpValidator Example" width="100%" height="100%">
		
		<s:layout>
			<s:VerticalLayout paddingLeft="10" paddingRight="10" 
							  paddingTop="10" paddingBottom="10"/>
		</s:layout>
		
		<s:Label width="100%" color="0x323232" text="Instructions:"/>
		<s:Label width="100%" color="0x323232" text="1. Enter text to search. By default, enter  a string containing the letters ABC in sequence followed by any digit."/>
		<s:Label width="100%" color="0x323232" text="2. Enter the regular expression. By default, enter ABC\d."/>
		<s:Label width="100%" color="0x323232" text="3. Click the Button control to trigger the validation."/>
		<s:Label width="100%" color="0x323232" text="4. The results show the index in the text where the matching pattern begins, and the matching pattern. "/>
		
		<mx:Form>
			<mx:FormItem label="Enter text: ">
				<s:TextInput id="regex_text" text="xxxxABC4xxx" width="100%"/>
			</mx:FormItem>
			
			<mx:FormItem label="Enter regular expression: ">
				<s:TextInput id="regex" text="ABC\d" width="100%"/>
			</mx:FormItem>
			
			<mx:FormItem label="Results: ">
				<s:TextInput id="reResults" width="100%"/>
			</mx:FormItem>
			
			<mx:FormItem >
				<s:Button id="myButton" label="Validate"/>
			</mx:FormItem>
		</mx:Form>
		
	</s:Panel>
	
</s:Module>
